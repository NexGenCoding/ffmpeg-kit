name: android build scripts

on:
  push:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - '.github/workflows/test.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - '.github/workflows/test.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'

jobs:
  build-main-on-macos:
    name: android main on macOS
    runs-on: macos-12
    strategy:
      matrix:
        ndk-version: ['r22b-darwin-x86_64', 'r23b-darwin', 'r24-darwin', 'r25b-darwin']
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Set up adopt JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Install Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      - name: Install Prerequisites
        run: |
          brew install \
            autoconf \
            automake \
            libtool \
            pkg-config \
            curl \
            git \
            nasm \
            gcc \
            gperf \
            texinfo \
            yasm \
            bison \
            autogen \
            wget \
            meson \
            ragel \
            groff \
            libtasn1
          
          brew install --cask \
            doxygen \
            cmake
          
          brew install gettext # autopoint is part of gettext
          brew link gettext --force --overwrite
      - name: Set up Android NDK
        run: |
          curl -s "https://dl.google.com/android/repository/android-ndk-${{ matrix.ndk-version }}.zip" -o ndk.zip
          unzip -q -o ndk.zip -d .ndk
          echo "ANDROID_NDK_ROOT=$PWD/.ndk/$(ls .ndk)" >> $GITHUB_ENV
      - name: Run the build script
        run: ./android.sh -d --enable-gpl --full --enable-android-media-codec --enable-chromaprint --enable-android-zlib --enable-dav1d --enable-fontconfig --enable-freetype --enable-fribidi --enable-gmp --enable-gnutls --enable-kvazaar --enable-lame --enable-libaom --enable-libass --enable-libiconv --enable-libilbc --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libxml2 --enable-opencore-amr --enable-openh264 --enable-openssl --enable-opus --enable-sdl --enable-shine --enable-snappy --enable-soxr --enable-speex --enable-srt --enable-tesseract --enable-twolame --enable-vo-amrwbenc --enable-zimg --enable-libvidstab --enable-rubberband --enable-x264 --enable-x265 --enable-xvidcore --redownload-LIBRARY --rebuild-LIBRARY
      - name: Print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: Print FFBuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
      - name: List contents of libs directory
        run: |
          echo "Listing contents of build directory:"
          ls -alh android/libs
          echo "Listing contents of obj directory:"
          ls -alh android/obj
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ffmpeg-kit-libs
          path: |
            android/libs
            android/obj
